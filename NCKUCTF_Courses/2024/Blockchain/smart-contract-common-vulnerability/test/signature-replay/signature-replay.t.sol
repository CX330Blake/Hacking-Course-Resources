// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import {Test, console} from "forge-std/Test.sol";

interface IToken {
    function balanceOf(address) external returns (uint256);
}

interface INBA {
    struct vData {
        bool mint_free;
        uint256 max_mint;
        address from;
        uint256 start;
        uint256 end;
        uint256 eth_price;
        uint256 dust_price;
        bytes signature;
    }

    function mint_approved(
        vData memory info,
        uint256 number_of_items_requested,
        uint16 _batchNumber
    ) external;
}

contract CounterTest is Test {
    address public player;
    address public constant token = 0x9b8b9c7C02be0bD0AA4D669bF6a1f6003424c6Dc;
    address public target = 0xDD5A649fC076886Dfd4b9Ad6aCFC9B5eb882e83c;

    function setUp() public {
        // fork mainnet evm with block number 14622841
        vm.createSelectFork("mainnet", 14622841);

        player = makeAddr("player");
    }

    function testSignatureReplay() public {
        // replay this victim's signature: https://etherscan.io/tx/0x0555d3d7a9d1d5659cd99c69f15fb88da57307c3970678fb5e6547879bc548a6
        //@todo
    }
}
