// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Test, console2} from "forge-std/Test.sol";
import {CoinFlip} from "src/randomness/CoinFlip.sol";

contract CoinFlipTest is Test {
    CoinFlip public coinFlip;

    address public player = makeAddr("player");
    uint256 public constant FACTOR =
        57896044618658097711785492504343953926634992332820282019728792003956564819968;

    modifier checkChallengeSolved() {
        vm.startPrank(player);
        _;
        assertEq(
            coinFlip.consecutiveWins(),
            10,
            "consecutive wins less than 10!"
        );
        vm.stopPrank();
    }

    function setUp() public {
        // deploy the CoinFlip contract (challenge)
        coinFlip = new CoinFlip();
    }

    function testCoinFlipHack() external checkChallengeSolved {
        //@todo
    }
}
